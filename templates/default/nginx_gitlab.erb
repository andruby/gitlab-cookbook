# GITLAB
# Maintainer: @randx
# App Version: 5.0

upstream gitlab {
  server unix:<%= node['gitlab']['socket'] %>;
}

<%- if node['gitlab']['ssl'] %>
server {
<% if node.platform?("centos","redhat","fedora") %>
  listen 0.0.0.0:<%= node['gitlab']['http_port'] %>;
<% else %>
  listen [::]:<%= node['gitlab']['http_port'] %>;
<% end %>
  server_name <%= node['gitlab']['host'] %>;
  rewrite ^ https://$server_name:<%= node['gitlab']['https_port'] %>$request_uri? permanent;
}
<%- end %>

server {
<% if node.platform?("centos","redhat","fedora") %>
  listen 0.0.0.0:<%= if node['gitlab']['ssl'] then node['gitlab']['https_port'] else node['gitlab']['http_port'] end %>;
<% else %>
  listen [::]:<%= if node['gitlab']['ssl'] then node['gitlab']['https_port'] else node['gitlab']['http_port'] end %>;
<% end %>
  server_name <%= node['gitlab']['host'] %>;
  root <%= File.join(node['gitlab']['path'], 'public')%>;

  # individual nginx logs for this gitlab vhost
  access_log  /var/log/nginx/gitlab_access.log;
  error_log   /var/log/nginx/gitlab_error.log;

  location / {
    # serve static files from defined root folder;.
    # @gitlab is a named location for the upstream fallback, see below
    try_files $uri $uri/index.html $uri.html @gitlab;
  }

  <%- if node['gitlab']['ssl'] %>
  ssl on;
  ssl_certificate <%= node['gitlab']['ssl_crt_path'] %>;
  ssl_certificate_key <%= node['gitlab']['ssl_key_path'] %>;
  <%- end %>

  # if a file, which is not found in the root folder is requested,
  # then the proxy pass the request to the upsteam (gitlab unicorn)
  location @gitlab {
    proxy_read_timeout 300; # https://github.com/gitlabhq/gitlabhq/issues/694
    proxy_connect_timeout 300; # https://github.com/gitlabhq/gitlabhq/issues/694
    proxy_redirect     off;

    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   Host              $http_host;
    proxy_set_header   X-Real-IP         $remote_addr;

    proxy_pass http://gitlab;
  }
}
